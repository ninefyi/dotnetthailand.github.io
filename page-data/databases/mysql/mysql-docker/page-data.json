{"componentChunkName":"component---src-templates-docs-js","path":"/databases/mysql/mysql-docker","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"8e5cbb1e-55c8-5f85-b0f4-56b798e6fa41","title":"MySQL Docker","slug":"/databases/mysql/mysql-docker"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MySQL Docker\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Files structure\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"List all files in this example.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"config/\\n  lower-case-table-names.cnf\\ninit/\\n  init-database.sql\\n  set-database-permission.sql\\n.env\\ndocker-compose.yml\\n\\n\")), mdx(\"h1\", null, \"docker-compose.yml\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use MySQL latest version image with tag latest.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create additional database user.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Configure health checking.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use name volumes to not loss data when remove container.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use initialize database script\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use custom configuration to save use lower case table name.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use commands to set database character\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a bridge network name that can used by other containers.\\nThis can be useful when using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"docker run\"), \" to launch a container and attach a compose network.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-YAML\"\n  }, \"version: '3.8'\\n\\nservices:\\n  mysql-server:\\n    container_name: mysql-server\\n    image: mysql:latest\\n    restart: always\\n    environment:\\n      # TODO move password to a secret file\\n      MYSQL_ROOT_PASSWORD: MySQL1234!\\n\\n      # Set permission of this user in \\\"set-database-permission.sql\\\"\\n      MYSQL_USER: my-user\\n      MYSQL_PASSWORD: 'pa$$w@rd'\\n      MYSQL_DATABASE: my-database\\n\\n    ports:\\n      - 3306:3306\\n    healthcheck:\\n      test: mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD\\n      timeout: 10s\\n      retries: 10\\n    volumes:\\n      # Use name volumes, managed by Docker for local development\\n      - mysql-data:/var/lib/mysql\\n      - mysql-logs:/var/log/mysql\\n\\n      # Map all files in init folder as initialize database files\\n      - ./init:/docker-entrypoint-initdb.d\\n\\n      # Using a custom MySQL configuration file\\n      - ./config:/etc/mysql/conf.d\\n    command:\\n      [\\n        --character-set-server=utf8mb4,\\n        --collation-server=utf8mb4_unicode_ci,\\n      ]\\n    networks:\\n      - compose_network\\n\\n# https://docs.docker.com/compose/compose-file/compose-file-v3/#external-1\\nvolumes:\\n  mysql-data:\\n  mysql-logs:\\n  mongodb-data:\\n\\n# https://docs.docker.com/compose/compose-file/compose-file-v3/#network-configuration-reference\\n# Full document https://docs.docker.com/compose/networking/\\nnetworks:\\n  compose_network:\\n\\n\")), mdx(\"h1\", null, \"lower-case-table-names.cnf\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use lower case table name to prevent case sensitive problem on Linux machine.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More details \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/a/6134059/1872200\"\n  }, \"https://stackoverflow.com/a/6134059/1872200\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server Command Options \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/a/15453913/1872200\"\n  }, \"https://stackoverflow.com/a/15453913/1872200\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alternatively you can use command: \", \"[ --lower_case_table_names=1 ]\", \" in docker-compose.yml.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[mysqld]\\nlower_case_table_names=1\\n\\n\")), mdx(\"h1\", null, \"init-database.sql\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new table.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insert some data.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-SQL\"\n  }, \"USE `my-database`;\\n\\nCREATE TABLE users (\\n  id INT NOT NULL AUTO_INCREMENT,\\n  first_name VARCHAR(50) NOT null,\\n  last_name VARCHAR(50) NOT NULL,\\n  date_of_birth DATETIME NOT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\\n\\nINSERT INTO users VALUES (NULL, 'Jose', 'Realman', '2018-01-01');\\n\\n\")), mdx(\"h1\", null, \"set-database-permission.sql\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Grant all permissions of database 'my-database' to user 'my-user' on a localhost server.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The user is created by defining in docker-compose.yml.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-SQL\"\n  }, \"USE mysql;\\n\\nGRANT ALL PRIVILEGES ON `my-database`.* TO 'my-user'@'%';\\n\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you want to create a user manually, use the following command\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-SQL\"\n  }, \"  CREATE USER 'my-user'@'localhost' IDENTIFIED BY 'the_secure_password';\\n\\n\")), mdx(\"h1\", null, \".env\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explicit prefix volume/network name with this value or use -P with docker run\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More details \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.docker.com/compose/reference/envvars/#compose_project_name\"\n  }, \"https://docs.docker.com/compose/reference/envvars/#compose_project_name\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-Shell\"\n  }, \"COMPOSE_PROJECT_NAME = my_project\\n\\n\")), mdx(\"p\", null, \"Useful resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hub.docker.com/_/mysql\"\n  }, \"My SQL Docker image on Docker hub\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#files-structure","title":"Files structure"},{"url":"#docker-composeyml","title":"docker-compose.yml"},{"url":"#lower-case-table-namescnf","title":"lower-case-table-names.cnf"},{"url":"#init-databasesql","title":"init-database.sql"},{"url":"#set-database-permissionsql","title":"set-database-permission.sql"},{"url":"#env","title":".env"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"databases/mysql/mysql-docker.md","fields":{"gitLogLatestAuthorName":"aaronamm","gitLogLatestAuthorEmail":"theeranitp@gmail.com","gitLogLatestDate":"2 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"a08ce75ae4df204ceaa747c8866d6441c77b3284","date":"2021-03-24 05:27"}},"pageContext":{"id":"8e5cbb1e-55c8-5f85-b0f4-56b798e6fa41"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","3812332637","3812332637"]}